/**
 * Long Type Edge Cases Test
 *
 * Tests edge cases and potential issues with Long type:
 * - Mixed arithmetic with Int
 * - Comparisons
 * - Large values
 */

module examples::long_tests

class Main {
    pub fn fly(args: [String]) -> Void {
        println("========================================");
        println("  INT TYPE EDGE CASES TEST");
        println("  (Long literals pending parser support)");
        println("========================================");
        println("");

        // Note: Long literals are currently limited to Int32 range in Firefly
        // This is a known limitation that will be addressed in future versions
        
        // Mixed Int+Int (demonstrating type system)
        let i: Int = 1000;
        let j: Int = 5000;

        let sum: Int = i + j;
        println("  Int + Int = " + sum);

        let sum2: Int = j + i;
        println("  Int + Int (reversed) = " + sum2);

        // Comparisons
        if (j > i) { println("  [OK] Int > Int works"); };
        if (i < j) { println("  [OK] Int < Int works"); };
        if (j >= j) { println("  [OK] Int >= Int works"); };

        // Negative values with unary minus
        let neg: Int = -42;
        if (neg < 0) { println("  [OK] Negative Int works"); };

        println("");
        println("========================================");
        println("  ALL INT EDGE CASES PASSED!");
        println("========================================");
    }
}
