package com.example.userapi

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.*;
import org.springframework.stereotype.Service;

// Domain Model
class User {
    let mut id: String;
    let mut name: String;
    let mut email: String;
    
    init(name: String, email: String) {
        self.name = name;
        self.email = email;
    }
}

// Repository Interface
interface UserRepository {
    fn findAll() -> List;
    fn findById(id: String) -> User;
    fn save(user: User) -> User;
    fn deleteById(id: String) -> Unit;
}

// Service Layer
@Service
class UserService {
    @Autowired
    let repository: UserRepository;
    
    fn getAllUsers() -> List {
        repository.findAll()
    }
    
    fn getUser(id: String) -> User {
        repository.findById(id)
    }
    
    fn createUser(user: User) -> User {
        repository.save(user)
    }
    
    fn updateUser(id: String, user: User) -> User {
        user.id = id;
        repository.save(user)
    }
    
    fn deleteUser(id: String) -> Unit {
        repository.deleteById(id)
    }
}

// REST Controller
@RestController
@RequestMapping("/api/users")
class UserController {
    @Autowired
    let userService: UserService;
    
    @GetMapping("")
    fn getAllUsers() -> List {
        userService.getAllUsers()
    }
    
    @GetMapping("/{id}")
    fn getUser(@PathVariable id: String) -> User {
        userService.getUser(id)
    }
    
    @PostMapping("")
    fn createUser(@RequestBody user: User) -> User {
        userService.createUser(user)
    }
    
    @PutMapping("/{id}")
    fn updateUser(@PathVariable id: String, @RequestBody user: User) -> User {
        userService.updateUser(id, user)
    }
    
    @DeleteMapping("/{id}")
    fn deleteUser(@PathVariable id: String) -> Unit {
        userService.deleteUser(id)
    }
}

// Application Main
@SpringBootApplication
class Application {
    fn main(args: Array<String>) -> Unit {
        SpringApplication.run(Application.class, args);
    }
}
